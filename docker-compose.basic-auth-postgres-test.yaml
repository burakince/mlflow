services:
  minio:
    container_name: minio-basic-auth-pg-test
    hostname: minio
    image: minio/minio:${MINIO_VERSION}
    entrypoint: sh
    command: -c 'mkdir -p /data/mlflow && minio server /data --console-address ":9001"'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9000/minio/health/live || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - basic_auth_pg_test_nw

  postgres:
    image: "postgres:${POSTGRES_VERSION}"
    container_name: mlflow-basic-auth-pg-db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: mlflow
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mlflow"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - basic_auth_pg_test_nw

  usersdb:
    image: "postgres:${POSTGRES_VERSION}"
    container_name: mlflow-basic-auth-users-pg-db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: users
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d users"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - basic_auth_pg_test_nw

  mlflow:
    container_name: mlflow-basic-auth-pg-test
    build:
      context: .
      dockerfile: Dockerfile
    command: "mlflow server --backend-store-uri=postgresql:// --default-artifact-root=s3://mlflow/ --host=0.0.0.0 --port=8080 --workers 4 --gunicorn-opts='--timeout=120 --log-level=debug' --app-name basic-auth"
    environment:
      MLFLOW_FLASK_SERVER_SECRET_KEY: 0123456789
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: mlflow
      PGUSER: postgres
      PGPASSWORD: postgres
      MLFLOW_AUTH_CONFIG_PATH: /mlflow/basic_auth.ini
      ALEMBIC_LOG_LEVEL: DEBUG
      FLASK_ENV: development
      DEBUG: True
      GUNICORN_CMD_ARGS: --log-level debug
    restart: always
    ports:
      - "8080:8080"
    networks:
      - basic_auth_pg_test_nw
    volumes:
      - ./test-containers/basic-auth/postgres/basic_auth.ini:/mlflow/basic_auth.ini
    depends_on:
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy
      usersdb:
        condition: service_healthy

networks:
  basic_auth_pg_test_nw:
    driver: bridge
