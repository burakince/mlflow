services:
  minio:
    container_name: minio-mssql-test
    hostname: minio
    image: minio/minio:${MINIO_VERSION}
    entrypoint: sh
    command: -c 'mkdir -p /data/mlflow && minio server /data --console-address ":9001"'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9000/minio/health/live || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - aws_mssql_test_nw

  mssql:
    image: mcr.microsoft.com/mssql/server:${MSSQL_VERSION}
    container_name: mlflow-aws-mssql-db
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "MlflowStrong!Passw0rd"
      MSSQL_PID: Developer
      MSSQL_TCP_PORT: 1433
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'MlflowStrong!Passw0rd' -C -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - aws_mssql_test_nw

  mlflow:
    container_name: mlflow-aws-mssql-test
    build:
      context: .
      dockerfile: Dockerfile
    command: "mlflow server --backend-store-uri=mssql+pymssql://sa:MlflowStrong!Passw0rd@mssql:1433/tempdb --default-artifact-root=s3://mlflow/ --host=0.0.0.0 --port=8080"
    environment:
      MLFLOW_FLASK_SERVER_SECRET_KEY: 0123456789
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      MLFLOW_DISABLE_TELEMETRY: "true"
      DO_NOT_TRACK: "true"
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
    ports:
      - "8080:8080"
    networks:
      - aws_mssql_test_nw
    depends_on:
      minio:
        condition: service_healthy
      mssql:
        condition: service_healthy

networks:
  aws_mssql_test_nw:
    driver: bridge
