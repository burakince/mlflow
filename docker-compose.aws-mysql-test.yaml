services:
  minio:
    container_name: minio-mysql-test
    hostname: minio
    image: minio/minio:${MINIO_VERSION}
    entrypoint: sh
    command: -c 'mkdir -p /data/mlflow && minio server /data --console-address ":9001"'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - aws_mysql_test_nw

  mysql:
    image: "mysql:${MYSQL_VERSION}"
    container_name: mlflow-aws-mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mlflow
      MYSQL_USER: mlflow
      MYSQL_PASSWORD: password
      MYSQL_TCP_PORT: 3306
    ports:
      - "3306:3306"
    networks:
      - aws_mysql_test_nw

  mlflow:
    container_name: mlflow-aws-mysql-test
    build:
      context: .
      dockerfile: Dockerfile
    command: "mlflow server --backend-store-uri=mysql+pymysql://mlflow:password@mysql:3306/mlflow --default-artifact-root=s3://mlflow/ --host=0.0.0.0 --port=8080"
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
    ports:
      - "8080:8080"
    networks:
      - aws_mysql_test_nw
    depends_on:
      - minio
      - mysql

networks:
  aws_mysql_test_nw:
    driver: bridge
